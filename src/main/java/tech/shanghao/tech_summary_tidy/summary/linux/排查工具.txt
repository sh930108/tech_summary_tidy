
arthas
gdb

java远程调试方法：

JAVA的调试方法如下：
1。首先支持JVM，并设置参数，使之工作在DEBUG模式下，加入参数：-Xdebug -Xrunjdwp,transport=dt_socket,server=y,address=5432,suspend=n,onthrow=java.io.IOException,launch=/sbin/echo
其中，-Xdebug是通知JVM工作在DEBUG模式下，-Xrunjdwp是通知JVM使用(java debug wire protocol)来运行调试环境。该参数同时了一系列的调试选项：
transport指定了调试数据的传送方式，dt_socket是指用SOCKET模式，另有dt_shmem指用共享内存方式，其中，dt_shmem只适用于Windows平台。
server参数是指是否支持在server模式的VM中.
onthrow指明，当产生该类型的Exception时，JVM就会中断下来，进行调式。该参数可选。
launch指明，当JVM被中断下来时，执行的可执行程序。该参数可选
suspend指明，是否在调试客户端建立起来后，再执行JVM。
onuncaught(=y或n)指明出现uncaught exception 后，是否中断JVM的执行.

2。启动调试工具。
最简单的调试工具就是上面提到的JDB，以上述调试用JVM为例，可以用下面的命运行启动JDB：
jdb -connect com.sun.jdi.SocketAttach:port=5432,hostname=192.168.11.213
另外，还有好多的可视化调试工具，如 eclipse,jsawt等等。Eclipses可用 ant debug来建立一个调试方法。


其实就是使用了JDK的JPDA，在启动服务器（Jboss或者Tomcat等）的命令行参数里面加上：
-Xdebug -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n

Java远程调试
-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,address=3999,suspend=n

-XDebug               启用调试。
-Xnoagent             禁用默认sun.tools.debug调试器。
-Djava.compiler=NONE  禁止 JIT 编译器的加载。
-Xrunjdwp             加载JDWP的JPDA参考执行实例。
transport             用于在调试程序和 VM 使用的进程之间通讯。
dt_socket             套接字传输。
dt_shmem              共享内存传输，仅限于 Windows。
server=y/n            VM 是否需要作为调试服务器执行。
address=3999          调试服务器的端口号，客户端用来连接服务器的端口号。
suspend=y/n           是否在调试客户端建立连接之后启动 VM

Resin:
RESIN_HOME\bin\httpd.exe -Xdebug -Xrunjdwp:transport=dt_socket,address=5005,server=y,suspend=n

Tomcat:
在catalina.sh/bat 的最上面加上：SET CATALINA_OPTS=-server -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005 即可。

Weblogic:
在startWebLogic.bat加上：set JAVA_OPTIONS=-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005

启动App server后，在ide下通过debug remote java application并侦听相应的debug端口

Eclipse Rcp:

java -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,suspend=y,server=y,address=8000 -cp F:/rcp/plugins/org.eclipse.equinox.launcher_1.0.0.v20070606.jar org.eclipse.equinox.launcher.Main -application rcp.application -data F:/rcp/workspace -os win32 -ws win32 -arch x86 -nl en_US

-Xdebug -Xnoagent等参数需要放在main class前面

AMQ中配置方式：
wrapper.conf 中添加  .n 需要顺序
wrapper.java.additional.18=-Xdebug -Xnoagent -Djava.compiler=NONE
wrapper.java.additional.n=-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=10.19.131.13:5005



#### 抓包工具











